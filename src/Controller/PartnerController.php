<?php

namespace App\Controller;

use App\Entity\Partner;
use App\Form\PartnerType;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class PartnerController extends AbstractController
{
    /**
     * @Route("/partner/new", name="partner_create")
     * @Route("/partner/{id}/edit", name="partner_edit")
     */


    public function form(Partner $partner = null, Request $request, ObjectManager $manager)
    {
        /*$position = $article->getPosition();

        if(isset ($position)){
            return ('changer de position');
        }*/
        if (!$partner) {
            $partner = new Partner();
        }


        $form = $this->createForm(PartnerType::class, $partner);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            // $file stores the uploaded PDF file

            $partner = $form->getData();

            if (!empty($partner['image'])) {

                $file = $form->get('image')->getData();


                $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
                // moves the file to the directory where brochures are stored
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );


                // instead of its contents
                $partner->setImage($fileName);
                $manager = $this->getDoctrine()->getManager();

                // ... persist the $product variable or any other work
                $manager->persist($partner);
                $manager->flush();
            }

            return $this->redirect($this->generateUrl('partner_show'));
        }

        return $this->render('partner/create.html.twig', [
            'formArticle' => $form->createView(),
            'partner' => $partner,
            'editMode' => $partner->getId() !== null
        ]);

    }

    /**
     * @Route("/partner/delete/{id}", name="partner_delete")
     */
    public function remove(Partner $partner, ObjectManager $manager)
    {
        $id = $partner->getId();
        if (!$partner) {
            throw $this->createNotFoundException(
                'No article found for id7418520.*963.5201'.$id
            );
        }

        $manager->remove($partner);
        $manager->flush();
        return new Response('Delete partner'.$id);
    }
    /**
     * @Route("/partner/{id}", name="partner_show")
     */
    public function show(Partner $partner){

        return $this->render('article/show.html.twig',[
            'controller_name' => 'ArticleController',
            'partner' => $partner
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
